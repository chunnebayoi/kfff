import requests
import pandas as pd
import talib
import time
from telegram import Bot

# ====== C·∫§U H√åNH ======
SYMBOL = "BTCUSDT"          # C·∫∑p coin mu·ªën trade
INTERVAL = "1m"             # Khung th·ªùi gian n·∫øn
LIMIT = 50                  # S·ªë n·∫øn l·∫•y (c√†ng nhi·ªÅu c√†ng ·ªïn ƒë·ªãnh t√≠n hi·ªáu)
RSI_PERIOD = 14             # Chu k·ª≥ RSI

TELEGRAM_TOKEN = "7258798991:AAGO69jf0DNL-yIc-QVirm3gTYwab1ssjWk"   # <-- ƒëi·ªÅn token bot v√†o ƒë√¢y
TELEGRAM_CHAT_ID = "6357023076"            # <-- ƒëi·ªÅn chat id v√†o ƒë√¢y

DELAY_SECONDS = 60         # Sau bao l√¢u qu√©t l·∫°i (60 gi√¢y = 1 ph√∫t)

# ====== H√ÄM L·∫§Y D·ªÆ LI·ªÜU N·∫æN ======
def get_binance_candles(symbol, interval, limit):
    url = f"https://api.binance.com/api/v3/klines?symbol={symbol}&interval={interval}&limit={limit}"
    response = requests.get(url)
    data = response.json()
    df = pd.DataFrame(data, columns=[
        "open_time", "open", "high", "low", "close", "volume",
        "close_time", "quote_asset_volume", "number_of_trades",
        "taker_buy_base", "taker_buy_quote", "ignore"
    ])
    df["open_time"] = pd.to_datetime(df["open_time"], unit='ms')
    df["close"] = df["close"].astype(float)
    return df

# ====== H√ÄM PH√ÇN T√çCH RSI ======
def calculate_rsi(candles, period):
    closes = candles['close'].values
    rsi = talib.RSI(closes, timeperiod=period)
    return rsi[-1]

# ====== H√ÄM G·ª¨I T√çN HI·ªÜU TELEGRAM ======
def send_telegram_signal(signal, rsi_value):
    bot = Bot(TELEGRAM_TOKEN)
    message = f"üìà T√≠n hi·ªáu Trade:\nSignal: {signal}\nRSI: {rsi_value:.2f}"
    bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)

# ====== CH∆Ø∆†NG TR√åNH CH√çNH ======
def main():
    while True:
        try:
            candles = get_binance_candles(SYMBOL, INTERVAL, LIMIT)
            rsi_value = calculate_rsi(candles, RSI_PERIOD)

            # X√°c ƒë·ªãnh t√≠n hi·ªáu
            if rsi_value < 30:
                signal = "MUA ‚¨ÜÔ∏è"
            elif rsi_value > 70:
                signal = "B√ÅN ‚¨áÔ∏è"
            else:
                signal = "CH·ªú üí§"

            print(f"RSI: {rsi_value:.2f} -> {signal}")

            # G·ª≠i t√≠n hi·ªáu n·∫øu l√† MUA/B√ÅN r√µ r√†ng
            if signal != "CH·ªú üí§":
                send_telegram_signal(signal, rsi_value)

        except Exception as e:
            print("L·ªói:", e)

        time.sleep(DELAY_SECONDS)

if __name__ == "__main__":
    main()